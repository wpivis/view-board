/*jshint esversion: 6 */
/*jslint node: true */
/*jshint strict:true */

var fs = require("fs");
var path = require('path');
var five = require("johnny-five");
var pixel = require("node-pixel");
var openurl = require("openurl");
var events = require("events");
var eventEmitter = events.EventEmitter();
// var http = require("http");
// var server = http.createServer(handleRequest);
// var dispatcher = require("httpdispatcher");

const PORT=8080;

var strip=null;
var buttons=null;

var Nopixel =  function(configPath) {
	var self = this;
	self.configPath = configPath;
	events.EventEmitter.call(self);
	self.start = function() {
		var systemConfiguration = JSON.parse(fs.readFileSync(configPath, "utf-8"));
		var fps = systemConfiguration[0].fps;
		var replVal = systemConfiguration[0].repl;
		var boardLength = systemConfiguration[0].boardLength;

		var board = new five.Board({repl: systemConfiguration[0].repl});
		board.on("ready", function() {
			var boardSelf = this;
			strip = new pixel.Strip({
				board: this,
				controller: systemConfiguration[1].controller,
				data: systemConfiguration[1].dataPin,
				length: systemConfiguration[1].length
			});
			buttons = new five.Buttons({
				pins: systemConfiguration[2].buttonPins,
				isPullup: systemConfiguration[2].isPullup
			});

			buttons.on("press", function(button) {
				var pressIndex = systemConfiguration[2].buttonPins.indexOf(button.pin);
				// console.log("Pressed: ", pressIndex); //This returns index value of the button, which coincides with the LED value
				self.emit('buttonPressed', pressIndex);
			})

			strip.on("ready", function() {
				console.log("strip ready");
        		self.setPixel = function(index, color) {
        			var p = strip.pixel(index);
        			p.color(color);
        			strip.show();
        		} //Wait, this works??? Hold on a minute.
        	});
		});
	};
}

Nopixel.prototype.__proto__ = events.EventEmitter.prototype;
module.exports = Nopixel;